syntax = "proto3";

package huangjunwen.nproto.nprpc.enc;

option go_package = "github.com/huangjunwen/nproto/nproto/nprpc/enc";

// PBRequest is request of a RPC call encoded by protobuf.
message PBRequest {
  // Param is protobuf encoded param.
  bytes               param     = 1;
  // MetaData dict. NOTE: map value can't be repeated type
  // See: https://stackoverflow.com/questions/38886789/protobuf3-how-to-describe-map-of-repeated-string
  repeated MetaDataKV meta_data = 2;
  // Timeout is timeout in nanoseconds. Use int64 instead of wkt's duration to avoid an extra pointer.
  int64               timeout   = 3;
}

// MetaDataKV is a kv pair of meta data.
message MetaDataKV {
  string          key    = 1;
  repeated string values = 2;
}

// PBReply is reply of a RPC call encoded by protobuf.
message PBReply {
  // Result is protobuf encoded result.
  bytes  result = 1;
  // Error is the error result of this rpc.
  string error  = 2;
}
