// Code generated by protoc-gen-go. DO NOT EDIT.
// source: math.proto

package mathapi // import "github.com/huangjunwen/nproto/tests/math/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SumRequest struct {
	Args                 []float64 `protobuf:"fixed64,1,rep,packed,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_ec66b31ea7d92d1c, []int{0}
}
func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (dst *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(dst, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetArgs() []float64 {
	if m != nil {
		return m.Args
	}
	return nil
}

type SumReply struct {
	Sum                  float64  `protobuf:"fixed64,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumReply) Reset()         { *m = SumReply{} }
func (m *SumReply) String() string { return proto.CompactTextString(m) }
func (*SumReply) ProtoMessage()    {}
func (*SumReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_math_ec66b31ea7d92d1c, []int{1}
}
func (m *SumReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumReply.Unmarshal(m, b)
}
func (m *SumReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumReply.Marshal(b, m, deterministic)
}
func (dst *SumReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumReply.Merge(dst, src)
}
func (m *SumReply) XXX_Size() int {
	return xxx_messageInfo_SumReply.Size(m)
}
func (m *SumReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SumReply.DiscardUnknown(m)
}

var xxx_messageInfo_SumReply proto.InternalMessageInfo

func (m *SumReply) GetSum() float64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "huangjunwen.nproto.tests.mathapi.SumRequest")
	proto.RegisterType((*SumReply)(nil), "huangjunwen.nproto.tests.mathapi.SumReply")
}

func init() { proto.RegisterFile("math.proto", fileDescriptor_math_ec66b31ea7d92d1c) }

var fileDescriptor_math_ec66b31ea7d92d1c = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0x2c, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0xc8, 0x28, 0x4d, 0xcc, 0x4b, 0xcf, 0x2a, 0xcd,
	0x2b, 0x4f, 0xcd, 0xd3, 0xcb, 0x03, 0x8b, 0xe9, 0x95, 0xa4, 0x16, 0x97, 0x14, 0xeb, 0x81, 0x14,
	0x25, 0x16, 0x64, 0x2a, 0x29, 0x70, 0x71, 0x05, 0x97, 0xe6, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x09, 0x71, 0xb1, 0x24, 0x16, 0xa5, 0x17, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x30, 0x06,
	0x81, 0xd9, 0x4a, 0x32, 0x5c, 0x1c, 0x60, 0x15, 0x05, 0x39, 0x95, 0x42, 0x02, 0x5c, 0xcc, 0xc5,
	0xa5, 0xb9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x8c, 0x41, 0x20, 0xa6, 0x51, 0x3a, 0x17, 0x8b, 0x6f,
	0x62, 0x49, 0x86, 0x50, 0x3c, 0x17, 0x73, 0x70, 0x69, 0xae, 0x90, 0x8e, 0x1e, 0x21, 0x1b, 0xf5,
	0x10, 0xd6, 0x49, 0x69, 0x11, 0xa9, 0xba, 0x20, 0xa7, 0xd2, 0xc9, 0x2c, 0xca, 0x24, 0x3d, 0xb3,
	0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x1f, 0x49, 0x9f, 0x3e, 0x44, 0x9f, 0x3e, 0x58,
	0x9f, 0x3e, 0x48, 0x9f, 0x7e, 0x62, 0x41, 0xa6, 0x35, 0xd4, 0x80, 0x24, 0x36, 0xb0, 0xac, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x28, 0xf9, 0xb7, 0x17, 0x01, 0x00, 0x00,
}
